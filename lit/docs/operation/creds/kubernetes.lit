\title{Kubernetes Credential Manager}{kubernetes-credential-manager}

\use-plugin{concourse-docs}
\omit-children-from-table-of-contents


Concourse can be configured to pull credentials from \link{Kubernetes
\code{secret}
objects}{https://kubernetes.io/docs/concepts/configuration/secret}.

To configure it, either enable the in-cluster client by setting the following
environment variable on the \reference{web-node}:

\codeblock{bash}{{{
CONCOURSE_KUBERNETES_IN_CLUSTER=true
}}}

or set the path to a \code{kubeconfig} file:

\codeblock{bash}{{{
CONCOURSE_KUBERNETES_CONFIG_PATH=~/.kube/config
}}}


\section{
  \title{Credential lookup rules}{kubernetes-credential-lookup-rules}

  When resolving a parameter such as \code{((foo))}, Concourse will lookup for
  it in the following order in the namespace configured for that team:

  \list{
    \codeblock{c}{{{
    Name:         PIPELINE_NAME.foo
    Namespace:    concourse-TEAM_NAME
    Type:         Opaque

    Data
    ====
    value:        32 bytes
    }}}
  }{
    \codeblock{c}{{{
    Name:         foo
    Namespace:    concourse-TEAM_NAME
    Type:         Opaque

    Data
    ====
    value:        32 bytes
    }}}
  }

  You can also have nested fields, which can be accessed using \code{.} syntax,
  e.g. \code{((foo.bar))}:

  \list{
    \codeblock{c}{{{
    Name:         PIPELINE_NAME.foo
    Namespace:    concourse-TEAM_NAME
    Type:         Opaque

    Data
    ====
    bar:          32 bytes
    }}}
  }{
    \codeblock{c}{{{
    Name:         foo
    Namespace:    concourse-TEAM_NAME
    Type:         Opaque

    Data
    ====
    bar:          32 bytes
    }}}
  }

  The prefix prepended to the namespace used by Concourse to search for secrets
  (in the examples above, \code{concourse-} can be changed by configuring the
  following in the \reference{web-node}:

  \codeblock{bash}{{{
  CONCOURSE_KUBERNETES_NAMESPACE_PREFIX=some-other-prefix-
  }}}


  If an action is being run in a one-off build, Concourse will not include the
  pipeline name in the secret that it looks for.

}

\section{
  \title{Configuring Kubernetes RBAC}

  As the Web nodes need to retrieve secrets from namespaces that are not its
  own, it needs extra permissions to do so.

  If you have \link{RBAC}{https://kubernetes.io/docs/reference/access-authn-authz/rbac/}
  enabled, that means creating the necessary Kubernetes objects to identify the
  Web nodes and give them access to a predefined list of namespaces where the
  secrets live.

}

